<?xml version="1.0"?>

<ruleset name="Kode Konveyor WAR"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>WAR project PMD rules of Kode Konveyor</description>
	<exclude-pattern>.*TestData.java</exclude-pattern>
	<rule ref="category/java/bestpractices.xml">
		<exclude name="JUnitAssertionsShouldIncludeMessage" />
		<exclude name="JUnitTestsShouldIncludeAssert" />
		<exclude name="UseAssertTrueInsteadOfAssertEquals" />
		<exclude name="UseAssertNullInsteadOfAssertTrue" />
	</rule>
	<rule ref="category/java/codestyle.xml">
		<exclude name="AvoidFinalLocalVariable" />
		<exclude name="LongVariable" />
		<exclude name="ControlStatementBraces" />
		<exclude name="MethodNamingConventions" />
		<exclude name="AtLeastOneConstructor" />
		<exclude name="LocalVariableCouldBeFinal" />
		<exclude name="ClassNamingConventions" />
		<exclude name="FieldNamingConventions" />
		<exclude name="GenericsNaming" />
		<exclude name="OnlyOneReturn" />
	</rule>
	<rule ref="category/java/codestyle.xml/MethodNamingConventions">
		<properties>
			<property name="junit4TestPattern"
				value="[a-z][a-zA-Z0-9_]*" />
		</properties>
	</rule>
	<rule ref="category/java/design.xml">
		<exclude name="LawOfDemeter" />
		<exclude name="FinalFieldCouldBeStatic" />
		<exclude name="LoosePackageCoupling" />
		<exclude name="UseUtilityClass" />
		<exclude name="DataClass" />
	</rule>
	<rule ref="category/java/design.xml/CyclomaticComplexity">
		<properties>
			<property name="classReportLevel" value="15" />
			<property name="methodReportLevel" value="5" />
		</properties>
	</rule>

	<rule ref="category/java/documentation.xml/CommentRequired">
		<properties>
			<property name="serialVersionUIDCommentRequired"
				value="Unwanted" />
			<property name="serialVersionUIDCommentRequired"
				value="Unwanted" />
			<property name="enumCommentRequirement" value="Unwanted" />
			<property name="protectedMethodCommentRequirement"
				value="Unwanted" />
			<property name="publicMethodCommentRequirement"
				value="Unwanted" />
			<property name="fieldCommentRequirement" value="Unwanted" />
			<property name="headerCommentRequirement" value="Unwanted" />
			<property name="methodWithOverrideCommentRequirement"
				value="Unwanted" />
			<property name="accessorCommentRequirement" value="Unwanted" />
		</properties>
	</rule>
	<rule ref="category/java/errorprone.xml">
		<exclude name="BeanMembersShouldSerialize" />
		<exclude name="DataflowAnomalyAnalysis" />
	</rule>
	<rule ref="category/java/multithreading.xml" />
	<rule ref="category/java/performance.xml" />
	<rule ref="category/java/security.xml" />

	<rule name="GenericsNamesShouldBeDescriptive" language="java"
		message="Generics names should match '[A-Z][a-z0-9]*Type'"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<description>
Rule Description
         </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration/TypeParameters/TypeParameter[
  not(matches(@Image,'[A-Z][a-z0-9]*Type'))
]
]]></value>
			</property>
		</properties>
		<example>
 <![CDATA[
public interface Matrix<KeyType extends Serializable, ValueType extends Serializable> {
    // This is ok...
}
]]>
        </example>
	</rule>
	<rule
		ref="category/java/design.xml/SignatureDeclareThrowsException">
		<properties>
			<property name="IgnoreJUnitCompletely" value="true" />
			<property name="violationSuppressRegex"
				value="/src/integration-test/*" />
		</properties>
	</rule>
	<rule ref="category/java/codestyle.xml/LinguisticNaming">
		<properties>
			<property name="ignoredAnnotations" value="org.junit.Test" />
		</properties>
	</rule>
	<rule ref="category/java/bestpractices.xml/UnusedImports">
		<properties>
			<property name="violationSuppressRegex"
				value="^import static.*\*$" />
		</properties>
	</rule>
	<rule name="JUnitTestsShouldIncludeAssert" language="java"
		message="Junit tests should have checks"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<!-- externalInfoUrl="TODO" -->
		<description>

    </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//MethodDeclaration[
  ./preceding-sibling::Annotation[.//@Image='Test'] and
  not(
    .//Name[matches(@Image,'assert')] or
    .//Name[matches(@Image,'verify')] or
    .//PrimarySuffix[matches(@Image,'andExpect')]
  )
]

]]>
            </value>
			</property>
		</properties>
		<!--<example><![CDATA[]]></example> -->
	</rule>
<rule name="ClassNamingConventions"
      language="java"
      message="Only standard units should be used. Non-standard classes
should only be used at the interfaces of the application,
and should be marked with @Delegate or @InterfaceClass"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
      Only standard units should be used. Non-standard classes
      should only be used at the interfaces of the application,
      and should be marked with @Delegate or @InterfaceClass
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration[
  not(
   matches(@Image,'[A-Z][a-z0-9]*Interface$') or
   matches(@Image,'[A-Z][a-z0-9]*Service$') or
   matches(@Image,'[A-Z][a-z0-9]*Controller$') or
   matches(@Image,'[A-Z][a-z0-9]*Test$') or
   matches(@Image,'[A-Z][a-z0-9]*TestData$') or
   matches(@Image,'[A-Z][a-z0-9]*TestHelper$') or
   matches(@Image,'[A-Z][a-z0-9]*Entity$') or
   matches(@Image,'[A-Z][a-z0-9]*DTO$') or
   matches(@Image,'[A-Z][a-z0-9]*Repository$') or
   matches(@Image,'[A-Z][a-z0-9]*Factory$') or
   matches(@Image,'[A-Z][a-z0-9]*Stubs$')
) and not(
   ../Annotation/MarkerAnnotation/Name/@Image = 'InterfaceClass' or
   ../Annotation/MarkerAnnotation/Name/@Image = 'Delegate'
)
] 

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestDataRules"
      language="java"
      message="TestData unit rules"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
      TestData units should be annotated with @Getter, and should
      contain non-static SCREAMING_SNAKE_CASE fields, and/or corresponding
      public getters
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[matches(@Image,'TestData$')]/(
//FieldDeclaration[
    not(matches(VariableDeclarator/VariableDeclaratorId/@Image,'^[A-Z0-9_]*$')) or
    @Static = true()
]|
//MethodDeclaration[
    not(matches(MethodDeclarator/@Image,'^get[A-Z0-9_]*$')) or
    @Public = false()
]|
.[not(..//MarkerAnnotation[Name/@Image='Getter'])]
)
]]>
         </value>
      </property>
   </properties>
</rule>

</ruleset>
